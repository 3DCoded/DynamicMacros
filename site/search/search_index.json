{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Klipper Dynamic Macros","text":"<p>Never restart Klipper again for simple macros.</p> <p>Warning</p> <p>This is still a work in progress.</p> <p>Klipper Dynamic Macros is an unofficial way to update macros without restarting Klipper, so you can update macros mid-print and see their results live. </p>"},{"location":"#how-normal-macros-work","title":"How Normal Macros Work","text":"<p>Your macros are written in a <code>.cfg</code> file, then included into your <code>printer.cfg</code>. When Klipper restarts, it parses these files and saves the macros internally (you can't change them without restarting Klipper). When a macro is called, the cached code is interpreted and run. This method is faster, as the macros don't have to be reread every time.</p>"},{"location":"#how-dynamic-macros-work","title":"How Dynamic Macros Work","text":"<p>Your macros are written in a <code>.cfg</code> file, then the relative path to that file is configured in a <code>[dynamicmacros]</code> config section. The config files are read and parsed every time you run the macro. This method is slightly slower, as the macros have to be reread every time.</p>"},{"location":"#variables","title":"Variables","text":"<p>Dynamic Macros support all features of normal <code>gcode_macros</code>, EXCEPT variables. Here's a simple example of which kind of variables work and won't work with Dynamic Macros.</p> WorksDoesn't Work <pre><code>[gcode_macro test]\ngcode:\n    {% set number = params.NUMBER|int %}\n    M117 Number: {number}\n</code></pre> <pre><code>[gcode_macro test]\nvariable_number: 10\ngcode:\n    M117 Number: {printer[\"gcode_macro test\"].number}\n</code></pre> <p>Dynamic Macros can still read macro variables from normal <code>gcode_macros</code>, but they can't store variables themselves.</p>"},{"location":"#should-a-macro-be-dynamic","title":"Should a Macro be Dynamic?","text":"<p>Not all macros will benefit from being dynamic. Here's a few questions you can ask about the macro to see if it should be dynamic:</p> <ul> <li>Is it a macro that is unstable/may break?</li> <li>Is it a macro that may need to be edited several times?</li> </ul> <p>If your answer to either of those was yes, then your macro will likely benefit from being dynamic. Follow the Tutorial to get started with Dynamic Macros.</p>"},{"location":"#features","title":"Features","text":"<p>See Development Status for the currently available features, and planned features.</p>"},{"location":"devstatus/","title":"Development Status","text":""},{"location":"devstatus/#features","title":"Features","text":"<ul> <li> Editing macros without restarting Klipper</li> <li> Accessing printer information from within Dynamic Macros</li> <li> Accessing parameters from within Dynamic Macros</li> <li> Adding new Dynamic Macros without restarting Klipper</li> <li> Removing existing Dynamic Macros without restarting Klipper</li> <li> Renaming Dynamic Macros without restarting Klipper</li> <li> Dynamic Macro descriptions</li> <li> Dynamic Macro variables</li> </ul>"},{"location":"tutorial/","title":"Tutorial","text":"<p>Follow this guide to setup and confiure Dynamic Macros.</p>"},{"location":"tutorial/#install","title":"Install","text":"<p>Run in your terminal:</p> <pre><code>cd ~\ngit clone https://github.com/3DCoded/DynamicMacros\ncd DynamicMacros\nsh install.sh\nsudo service klipper restart\n</code></pre>"},{"location":"tutorial/#configuration","title":"Configuration","text":"<p>To configure Dynamic Macros, put in your <code>printer.cfg</code> (or a file included in it):</p> printer.cfg<pre><code>[dynamicmacros]\nmacros: dynamic.cfg\n</code></pre> <p>Create a new file in the same folder as your <code>printer.cfg</code> called <code>dynamic.cfg</code>. In it, configure some macros like you normally would. Example:</p> dynamic.cfg<pre><code>[gcode_macro MYTEST]\ngcode:\n    M117 Hello world!\n\n[gcode_macro HEAT_HOTEND]\ngcode:\n    {% set temp = params.TEMP|int %}\n    M104 S{temp}\n</code></pre> <p>Restart Klipper.</p> <p>Info</p> <p>Updating the <code>[dynamicmacros]</code> config section requires a Klipper restart. The files listed in the <code>macros:</code> parameter must be present when Klipper restarts.</p>"},{"location":"tutorial/#testing","title":"Testing","text":"<p>If you run the command <code>MYTEST</code>, the output should be: <pre><code>Hello world!\n</code></pre></p> <p>If you runthe command <code>HEAT_HOTEND TEMP=200</code>, the hotend should start heating up. </p> <p>Next, edit the <code>MYTEST</code> macro to output something else, like <code>Test successful!</code></p> dynamic.cfg<pre><code>[gcode_macro MYTEST]\ngcode:\n    M117 Test successful!\n</code></pre> <p>Save the file, but do not restart Klipper.</p> <p>Run <code>MYTEST</code> again, and the output should be: <pre><code>Test successful!\n</code></pre></p>"},{"location":"tutorial/#when-to-restart-klipper-or-reload-dynamic-macros","title":"When to Restart Klipper or Reload Dynamic Macros","text":"<p>Dynamic Macros provides a utility <code>DYNAMIC_MACRO</code> command to run macros manually, and to refresh the macros. Usage examples (assuming M900 is defined as a Dynamic Macro):</p> <pre><code>DYNAMIC_MACRO MACRO=M900 K=0.035\n</code></pre> <p>is the same as:</p> <pre><code>M900 K0.035\n</code></pre> <p>To refresh Dynamic Macros, just run <code>DYNAMIC_MACRO</code> with no parameters.</p> <p>A Klipper restart is required if:</p> <ul> <li>You changed the description</li> </ul> <p>A <code>DYNAMIC_MACRO</code> refresh is required if:</p> <ul> <li>You created a new macro</li> <li>You renamed an existing macro</li> <li>You changed the contents of a macro</li> <li>You deleted an existing macro</li> </ul>"}]}